using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using ConvenienceStoreManager.DataAccess;
using ConvenienceStoreManager.Entities;
using ConvenienceStoreManager.BusinessLogic;
using ConvenienceStoreManager.Utils;
// Th∆∞ vi·ªán icon cho UI th√™m cute - B·∫°n c√≥ th·ªÉ th√™m n·∫øu ƒë√£ c√†i ƒë·∫∑t FontAwesome.Sharp
// using FontAwesome.Sharp;

namespace ConvenienceStoreManager.UI
{
    public partial class frmPurchaseOrder : Form
    {
        // Bi·∫øn th√†nh vi√™n
        private ProductRepository productRepository;
        private PurchaseRepository purchaseRepository;
        private DataTable dtPurchaseDetails;
        private Product selectedProduct;

        /// <summary>
        /// Constructor - Kh·ªüi t·∫°o form phi·∫øu nh·∫≠p h√†ng
        /// </summary>
        public frmPurchaseOrder()
        {
            InitializeComponent();
            productRepository = new ProductRepository();
            purchaseRepository = new PurchaseRepository();
            CreatePurchaseDetailsTable();
            InitNewPurchase();
            
            // üå∏ Style UI h·ªìng h√†o d·ªÖ th∆∞∆°ng
            this.BackColor = System.Drawing.Color.MistyRose;
            btnAddToPurchase.BackColor = System.Drawing.Color.Pink;
            btnSavePurchase.BackColor = System.Drawing.Color.LightPink;
            btnNewPurchase.BackColor = System.Drawing.Color.HotPink;
            btnAddToPurchase.ForeColor = System.Drawing.Color.White;
            btnSavePurchase.ForeColor = System.Drawing.Color.White;
            btnNewPurchase.ForeColor = System.Drawing.Color.White;
            
            // N·∫øu mu·ªën d√πng icon FontAwesome cho n√∫t (c·∫ßn c√†i ƒë·∫∑t FontAwesome.Sharp):
            // btnAddToPurchase.IconChar = IconChar.PlusCircle;
        }

        /// <summary>
        /// üìç T·∫°o c·∫•u tr√∫c DataTable l∆∞u tr·ªØ chi ti·∫øt phi·∫øu nh·∫≠p
        /// </summary>
        private void CreatePurchaseDetailsTable()
        {
            // X√≥a ngu·ªìn d·ªØ li·ªáu c≈© n·∫øu c√≥
            dgvPurchaseDetails.DataSource = null;
            dgvPurchaseDetails.Columns.Clear();

            // T·∫°o DataTable m·ªõi
            dtPurchaseDetails = new DataTable();
            dtPurchaseDetails.Columns.Add("ProductID", typeof(int));
            dtPurchaseDetails.Columns.Add("ProductName", typeof(string));
            dtPurchaseDetails.Columns.Add("Unit", typeof(string));
            dtPurchaseDetails.Columns.Add("Quantity", typeof(int));
            dtPurchaseDetails.Columns.Add("PurchasePrice", typeof(decimal));
            dtPurchaseDetails.Columns.Add("Subtotal", typeof(decimal));
            dtPurchaseDetails.Columns.Add("Remove", typeof(string)); // C·ªôt gi·∫£ ƒë·ªÉ hi·ªÉn th·ªã n√∫t x√≥a

            // G√°n DataTable l√†m ngu·ªìn d·ªØ li·ªáu cho DataGridView
            dgvPurchaseDetails.DataSource = dtPurchaseDetails;

            // Th√™m c·ªôt n√∫t x√≥a (button) n·∫øu ch∆∞a c√≥
            if (dgvPurchaseDetails.Columns["btnRemove"] == null)
            {
                DataGridViewButtonColumn btnRemove = new DataGridViewButtonColumn
                {
                    Name = "btnRemove",
                    HeaderText = "",
                    Text = "üóëÔ∏è X√≥a",
                    UseColumnTextForButtonValue = true,
                    Width = 60
                };
                dgvPurchaseDetails.Columns.Add(btnRemove);
            }

            // ·∫®n c·ªôt ID v√† c·ªôt gi·∫£
            if (dgvPurchaseDetails.Columns["ProductID"] != null)
                dgvPurchaseDetails.Columns["ProductID"].Visible = false;
            if (dgvPurchaseDetails.Columns["Remove"] != null)
                dgvPurchaseDetails.Columns["Remove"].Visible = false;

            // ƒê·ªãnh d·∫°ng c√°c c·ªôt s·ªë
            if (dgvPurchaseDetails.Columns["Quantity"] != null)
                dgvPurchaseDetails.Columns["Quantity"].DefaultCellStyle.Format = "N0";
            if (dgvPurchaseDetails.Columns["PurchasePrice"] != null)
                dgvPurchaseDetails.Columns["PurchasePrice"].DefaultCellStyle.Format = "N0";
            if (dgvPurchaseDetails.Columns["Subtotal"] != null)
                dgvPurchaseDetails.Columns["Subtotal"].DefaultCellStyle.Format = "N0";

            // ƒê·∫∑t ti√™u ƒë·ªÅ c√°c c·ªôt
            if (dgvPurchaseDetails.Columns["ProductName"] != null)
                dgvPurchaseDetails.Columns["ProductName"].HeaderText = "T√™n s·∫£n ph·∫©m";
            if (dgvPurchaseDetails.Columns["Unit"] != null)
                dgvPurchaseDetails.Columns["Unit"].HeaderText = "ƒêVT";
            if (dgvPurchaseDetails.Columns["Quantity"] != null)
                dgvPurchaseDetails.Columns["Quantity"].HeaderText = "S·ªë l∆∞·ª£ng";
            if (dgvPurchaseDetails.Columns["PurchasePrice"] != null)
                dgvPurchaseDetails.Columns["PurchasePrice"].HeaderText = "Gi√° nh·∫≠p";
            if (dgvPurchaseDetails.Columns["Subtotal"] != null)
                dgvPurchaseDetails.Columns["Subtotal"].HeaderText = "Th√†nh ti·ªÅn";

            // üå∏ Style DataGridView cho d·ªÖ th∆∞∆°ng h·ªìng h√†o
            ApplyCutePinkStyle(dgvPurchaseDetails);
        }
        // H√†m style DataGridView h·ªìng h√†o d·ªÖ th∆∞∆°ng
        private void ApplyCutePinkStyle(DataGridView dgv)
        {
            dgv.BackgroundColor = System.Drawing.Color.MistyRose;
            dgv.DefaultCellStyle.BackColor = System.Drawing.Color.LavenderBlush;
            dgv.DefaultCellStyle.SelectionBackColor = System.Drawing.Color.Pink;
            dgv.DefaultCellStyle.Font = new System.Drawing.Font("Comic Sans MS", 10, System.Drawing.FontStyle.Regular);
            dgv.ColumnHeadersDefaultCellStyle.BackColor = System.Drawing.Color.Pink;
            dgv.ColumnHeadersDefaultCellStyle.ForeColor = System.Drawing.Color.White;
            dgv.ColumnHeadersDefaultCellStyle.Font = new System.Drawing.Font("Comic Sans MS", 11, System.Drawing.FontStyle.Bold);
            dgv.EnableHeadersVisualStyles = false;
            dgv.GridColor = System.Drawing.Color.HotPink;
            dgv.RowHeadersVisible = false;
        }
        // Kh·ªüi t·∫°o phi·∫øu nh·∫≠p m·ªõi
        private void InitNewPurchase()
        {
            txtOrderID.Text = "Ch∆∞a c√≥";
            dtpOrderDate.Value = DateTime.Now;
            txtSupplier.Text = string.Empty;
            txtSearch.Text = string.Empty;
            numQuantity.Value = 1;
            numPurchasePrice.Value = 0;
            txtTotalAmount.Text = "0";
            txtNotes.Text = string.Empty;
            selectedProduct = null;

            dtPurchaseDetails.Clear();
            dgvProductSearch.DataSource = null;
        }

        // T·∫£i danh s√°ch s·∫£n ph·∫©m
        private void LoadProducts()
        {
            try
            {
                List<Product> products = productRepository.GetAllProducts();
                dgvProductSearch.DataSource = products;
            }
            catch (Exception ex)
            {
                MessageHelper.ShowDatabaseError(ex);
            }
        }

        // T√¨m ki·∫øm s·∫£n ph·∫©m theo t·ª´ kh√≥a
        private void SearchProducts()
        {
            try
            {
                string keyword = txtSearch.Text.Trim();
                if (string.IsNullOrEmpty(keyword))
                {
                    LoadProducts();
                    return;
                }

                List<Product> products = productRepository.SearchProducts(keyword);
                dgvProductSearch.DataSource = products;
            }
            catch (Exception ex)
            {
                MessageHelper.ShowDatabaseError(ex);
            }
        }

        // Th√™m s·∫£n ph·∫©m v√†o phi·∫øu nh·∫≠p
        private void AddProductToPurchase()
        {
            if (selectedProduct == null)
            {
                MessageHelper.ShowWarning("Vui l√≤ng ch·ªçn s·∫£n ph·∫©m tr∆∞·ªõc khi th√™m v√†o phi·∫øu nh·∫≠p!");
                return;
            }

            int quantity = (int)numQuantity.Value;
            decimal purchasePrice = numPurchasePrice.Value;

            if (quantity <= 0)
            {
                MessageHelper.ShowWarning("S·ªë l∆∞·ª£ng ph·∫£i l·ªõn h∆°n 0!");
                return;
            }

            if (purchasePrice <= 0)
            {
                MessageHelper.ShowWarning("Gi√° nh·∫≠p ph·∫£i l·ªõn h∆°n 0!");
                return;
            }

            // Ki·ªÉm tra xem s·∫£n ph·∫©m ƒë√£ c√≥ trong phi·∫øu nh·∫≠p ch∆∞a
            bool productExists = false;
            foreach (DataRow row in dtPurchaseDetails.Rows)
            {
                if ((int)row["ProductID"] == selectedProduct.ProductID)
                {
                    if (MessageHelper.ShowConfirmation($"S·∫£n ph·∫©m {selectedProduct.ProductName} ƒë√£ c√≥ trong phi·∫øu nh·∫≠p. B·∫°n c√≥ mu·ªën c·∫≠p nh·∫≠t kh√¥ng?") == DialogResult.Yes)
                    {
                        // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng, gi√° nh·∫≠p v√† th√†nh ti·ªÅn
                        row["Quantity"] = quantity;
                        row["PurchasePrice"] = purchasePrice;
                        row["Subtotal"] = quantity * purchasePrice;
                    }
                    productExists = true;
                    break;
                }
            }

            // N·∫øu s·∫£n ph·∫©m ch∆∞a c√≥ trong phi·∫øu nh·∫≠p, th√™m m·ªõi
            if (!productExists)
            {
                DataRow newRow = dtPurchaseDetails.NewRow();
                newRow["ProductID"] = selectedProduct.ProductID;
                newRow["ProductName"] = selectedProduct.ProductName;
                newRow["Unit"] = selectedProduct.Unit;
                newRow["Quantity"] = quantity;
                newRow["PurchasePrice"] = purchasePrice;
                newRow["Subtotal"] = quantity * purchasePrice;
                dtPurchaseDetails.Rows.Add(newRow);
            }

            CalculateTotalAmount();
            numQuantity.Value = 1;
            numPurchasePrice.Value = 0;
            selectedProduct = null;
        }

        /// <summary>
        /// üìç T√≠nh to√°n t·ªïng ti·ªÅn phi·∫øu nh·∫≠p
        /// </summary>
        private void CalculateTotalAmount()
        {
            decimal total = 0;
            foreach (DataRow row in dtPurchaseDetails.Rows)
            {
                total += Convert.ToDecimal(row["Subtotal"]);
            }
            txtTotalAmount.Text = total.ToString("N0");
        }

        // L∆∞u phi·∫øu nh·∫≠p v√† c·∫≠p nh·∫≠t t·ªìn kho
        private void  SavePurchase()
        {
            if (dtPurchaseDetails.Rows.Count == 0)
            {
                MessageHelper.ShowWarning("Phi·∫øu nh·∫≠p ch∆∞a c√≥ s·∫£n ph·∫©m n√†o!");
                return;
            }

            if (string.IsNullOrWhiteSpace(txtSupplier.Text))
            {
                if (MessageHelper.ShowConfirmation("B·∫°n ch∆∞a nh·∫≠p t√™n nh√† cung c·∫•p. V·∫´n ti·∫øp t·ª•c?") == DialogResult.No)
                {
                    txtSupplier.Focus();
                    return;
                }
            }

            try
            {
                // T·∫°o ƒë·ªëi t∆∞·ª£ng phi·∫øu nh·∫≠p
                PurchaseOrder purchase = new PurchaseOrder
                {
                    OrderDate = dtpOrderDate.Value,
                    SupplierName = txtSupplier.Text.Trim(),
                    TotalAmount = decimal.Parse(txtTotalAmount.Text.Replace(",", "")),
                    Notes = txtNotes.Text.Trim()
                };

                // T·∫°o danh s√°ch chi ti·∫øt phi·∫øu nh·∫≠p
                List<PurchaseOrderDetail> details = new List<PurchaseOrderDetail>();
                foreach (DataRow row in dtPurchaseDetails.Rows)
                {
                    PurchaseOrderDetail detail = new PurchaseOrderDetail
                    {
                        ProductID = (int)row["ProductID"],
                        Quantity = (int)row["Quantity"],
                        PurchasePrice = (decimal)row["PurchasePrice"],
                        Subtotal = (decimal)row["Subtotal"]
                    };
                    details.Add(detail);
                }

                // L∆∞u phi·∫øu nh·∫≠p v√† c·∫≠p nh·∫≠t t·ªìn kho
                purchaseRepository.CreatePurchaseOrder(purchase, details);
                MessageHelper.ShowSuccess("ƒê√£ l∆∞u phi·∫øu nh·∫≠p th√†nh c√¥ng!");
            }
            catch (Exception ex)
            {
                MessageHelper.ShowDatabaseError(ex);
            }
        }

        // X·ª≠ l√Ω s·ª± ki·ªán khi form ƒë∆∞·ª£c t·∫£i
        private void frmPurchaseOrder_Load(object sender, EventArgs e)
        {
            LoadProducts();
        }

        // X·ª≠ l√Ω s·ª± ki·ªán khi click n√∫t t√¨m ki·∫øm
        private void btnSearch_Click(object sender, EventArgs e)
        {
            SearchProducts();
        }

        // X·ª≠ l√Ω s·ª± ki·ªán khi nh·∫•n Enter trong √¥ t√¨m ki·∫øm
        private void txtSearch_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Enter)
            {
                e.Handled = true; // NgƒÉn kh√¥ng cho ph√°t ra ti·∫øng "beep"
                SearchProducts();
            }
        }

        // X·ª≠ l√Ω s·ª± ki·ªán khi click v√†o m·ªôt d√≤ng trong danh s√°ch s·∫£n ph·∫©m
        private void dgvProductSearch_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                DataGridViewRow row = dgvProductSearch.Rows[e.RowIndex];
                int productID = Convert.ToInt32(row.Cells["ProductID"].Value);
                selectedProduct = new Product
                {
                    ProductID = productID,
                    ProductName = row.Cells["ProductName"].Value.ToString(),
                    Unit = row.Cells["Unit"].Value.ToString(),
                    SellingPrice = Convert.ToDecimal(row.Cells["SellingPrice"].Value),
                    StockQuantity = Convert.ToInt32(row.Cells["StockQuantity"].Value)
                };

                // C√≥ th·ªÉ ƒë·∫∑t gi√° nh·∫≠p m·∫∑c ƒë·ªãnh b·∫±ng gi√° b√°n ho·∫∑c ƒë·ªÉ tr·ªëng
                numPurchasePrice.Value = selectedProduct.SellingPrice * 0.8m; // V√≠ d·ª•: gi√° nh·∫≠p = 80% gi√° b√°n
            }
        }

        // X·ª≠ l√Ω s·ª± ki·ªán khi click n√∫t th√™m v√†o phi·∫øu nh·∫≠p
        private void btnAddToPurchase_Click(object sender, EventArgs e)
        {
            AddProductToPurchase();
        }

        // X·ª≠ l√Ω s·ª± ki·ªán khi click n√∫t l∆∞u phi·∫øu nh·∫≠p
        private void btnSavePurchase_Click(object sender, EventArgs e)
        {
            SavePurchase();
        }

        // X·ª≠ l√Ω s·ª± ki·ªán khi click n√∫t t·∫°o phi·∫øu nh·∫≠p m·ªõi
        private void btnNewPurchase_Click(object sender, EventArgs e)
        {
            // H·ªèi x√°c nh·∫≠n n·∫øu ƒëang c√≥ phi·∫øu nh·∫≠p ch∆∞a l∆∞u
            if (dtPurchaseDetails.Rows.Count > 0)
            {
                if (MessageHelper.ShowConfirmation("B·∫°n c√≥ ch·∫Øc mu·ªën t·∫°o phi·∫øu nh·∫≠p m·ªõi? Phi·∫øu nh·∫≠p hi·ªán t·∫°i s·∫Ω b·ªã h·ªßy!") == DialogResult.Yes)
                {
                    InitNewPurchase();
                }
            }
            else
            {
                InitNewPurchase();
            }
        }

        /// <summary>
        /// üìç X·ª≠ l√Ω s·ª± ki·ªán khi click n√∫t x√≥a s·∫£n ph·∫©m kh·ªèi phi·∫øu nh·∫≠p
        /// </summary>
        private void dgvPurchaseDetails_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0 && e.ColumnIndex == dgvPurchaseDetails.Columns["btnRemove"].Index)
            {
                if (MessageHelper.ShowConfirmation("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi phi·∫øu nh·∫≠p?") == DialogResult.Yes)
                {
                    dtPurchaseDetails.Rows.RemoveAt(e.RowIndex);
                    CalculateTotalAmount();
                    dgvPurchaseDetails.Refresh();
                    MessageHelper.ShowSuccess("ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi phi·∫øu nh·∫≠p!");
                }
            }
        }

        /// <summary>
        /// üå∏ Ghi ch√∫ s·ª≠a l·ªói t∆∞∆°ng t·ª± cho c√°c file kh√°c:
        /// - Khi mu·ªën th√™m n√∫t x√≥a v√†o DataGridView, h√£y t·∫°o DataGridViewButtonColumn v√† ki·ªÉm tra n·∫øu ƒë√£ t·ªìn t·∫°i ch∆∞a.
        /// - Khi x·ª≠ l√Ω s·ª± ki·ªán CellClick, nh·ªõ ki·ªÉm tra ƒë√∫ng t√™n c·ªôt ("btnRemove") v√† ch·ªâ x√≥a d√≤ng khi x√°c nh·∫≠n.
        /// - ƒê·ªÉ style d·ªÖ th∆∞∆°ng, h√£y d√πng m√†u h·ªìng cho c√°c control, c√≥ th·ªÉ d√πng FontAwesome icon cho c√°c n√∫t.
        /// - N·∫øu mu·ªën ·∫©n c·ªôt gi·∫£ (v√≠ d·ª• "Remove"), h√£y ƒë·∫∑t Visible = false.
        /// - Khi t√≠nh t·ªïng ti·ªÅn, nh·ªõ d√πng Convert.ToDecimal ƒë·ªÉ tr√°nh l·ªói √©p ki·ªÉu.
        /// </summary>
    }
}
